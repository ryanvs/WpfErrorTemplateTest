<Window
	x:Class="WpfErrorTemplateTest.Views.MainView"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
	xmlns:ic="http://schemas.microsoft.com/expression/2010/interactions"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:viewModels="clr-namespace:WpfErrorTemplateTest.ViewModels"
	mc:Ignorable="d"
	Title="MainWindow"
	Height="375" Width="525"
>
	<Window.DataContext>
		<viewModels:MainViewModel/>
	</Window.DataContext>
	<Window.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="../Resources/Styles.xaml"/>
				<ResourceDictionary Source="../Resources/PropertyWindow.xaml"/>
				<ResourceDictionary Source="../Resources/ErrorTemplates.xaml"/>
				<ResourceDictionary Source="../Resources/CheckBoxSlider.xaml"/>
				<ResourceDictionary>
					<Style TargetType="{x:Type TextBox}">
						<Setter Property="Background" Value="LightSkyBlue" />
						<Style.Triggers>
							<Trigger Property="IsReadOnly" Value="True">
								<Setter Property="Background" Value="Red" />
							</Trigger>
						</Style.Triggers>
					</Style>
				</ResourceDictionary>
			</ResourceDictionary.MergedDictionaries>
		</ResourceDictionary>
	</Window.Resources>
	<Grid x:Name="LayoutRoot">
		<!-- http://stackoverflow.com/a/3075209/29762 -->
		<VisualStateManager.VisualStateGroups>
			<VisualStateGroup x:Name="CentrePanelStates">
				<VisualStateGroup.Transitions>
					<VisualTransition GeneratedDuration="00:00:00">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="grid" Storyboard.TargetProperty="(FrameworkElement.Width)">
								<EasingDoubleKeyFrame KeyTime="00:00:00" Value="350"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualTransition>
					<VisualTransition GeneratedDuration="00:00:00.3000000" To="Open">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="grid" Storyboard.TargetProperty="(FrameworkElement.Width)">
								<EasingDoubleKeyFrame KeyTime="00:00:00" Value="350">
									<EasingDoubleKeyFrame.EasingFunction>
										<PowerEase EasingMode="EaseIn"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
								<EasingDoubleKeyFrame KeyTime="00:00:00.6000000" Value="800">
									<EasingDoubleKeyFrame.EasingFunction>
										<QuarticEase EasingMode="EaseInOut"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualTransition>
					<VisualTransition From="Open" GeneratedDuration="00:00:00.3000000" To="Closed">
						<VisualTransition.GeneratedEasingFunction>
							<BounceEase EasingMode="EaseOut"/>
						</VisualTransition.GeneratedEasingFunction>
						<Storyboard>
							<DoubleAnimation Duration="00:00:00.6000000" Storyboard.TargetName="grid" Storyboard.TargetProperty="(FrameworkElement.Width)" BeginTime="00:00:00">
								<DoubleAnimation.EasingFunction>
									<QuarticEase EasingMode="EaseInOut"/>
								</DoubleAnimation.EasingFunction>
							</DoubleAnimation>
						</Storyboard>
					</VisualTransition>
				</VisualStateGroup.Transitions>
				<VisualState x:Name="OpenState">
					<Storyboard>
						<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="grid" Storyboard.TargetProperty="(FrameworkElement.Width)">
							<EasingDoubleKeyFrame KeyTime="00:00:00" Value="800"/>
						</DoubleAnimationUsingKeyFrames>
					</Storyboard>
				</VisualState>
				<VisualState x:Name="ClosedState"/>
			</VisualStateGroup>
		</VisualStateManager.VisualStateGroups>

		<Grid.RowDefinitions>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="*"/>
		</Grid.RowDefinitions>

		<Grid x:Name="ControlsGrid">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="2*"/>
				<ColumnDefinition Width="3*"/>
				<ColumnDefinition Width="1*"/>
				<ColumnDefinition Width="1*"/>
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="Auto"/>
			</Grid.RowDefinitions>
			<Grid Grid.Column="0" MinWidth="150"/>
			<Grid Grid.Column="2" MinWidth="200"/>

			<!-- Header -->
			<TextBlock Grid.Row="0" Grid.Column="0" Margin="4"
								 VerticalAlignment="Center"
								 Text="Name"/>
			<TextBlock Grid.Row="0" Grid.Column="1" Margin="4"
								 VerticalAlignment="Center"
								 Text="Value"/>
			<TextBlock Grid.Row="0" Grid.Column="2" Margin="4"
								 HorizontalAlignment="Center" VerticalAlignment="Center"
								 Text="Enabled"/>
			<TextBlock Grid.Row="0" Grid.Column="3" Margin="4"
								 HorizontalAlignment="Center" VerticalAlignment="Center"
								 Text="Read-only"/>

			<TextBlock Grid.Row="1" Grid.Column="0" Margin="4"
								 VerticalAlignment="Center"
								 Text="Default"/>
			<TextBox Grid.Row="1" Grid.Column="1" Margin="4"
							 x:Name="ErrorTemplate1"
							 Template="{DynamicResource TestTextBoxStyle}"
							 Text="{Binding Description, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True, UpdateSourceTrigger=PropertyChanged}"/>
			<CheckBox Grid.Row="1" Grid.Column="2" Margin="4"
								HorizontalAlignment="Center" VerticalAlignment="Center"
								IsChecked="{Binding Path=IsEnabled, ElementName=ErrorTemplate1}"/>
			<CheckBox Grid.Row="1" Grid.Column="3" Margin="4"
								HorizontalAlignment="Center" VerticalAlignment="Center"
								IsChecked="{Binding Path=IsReadOnly, ElementName=ErrorTemplate1}"/>

			<TextBlock Grid.Row="2" Grid.Column="0" Margin="4"
								 VerticalAlignment="Center"
								 Text="textBoxInError"/>
			<TextBox Grid.Row="2" Grid.Column="1" Margin="4"
							 x:Name="ErrorTemplate2"
							 Style="{StaticResource textBoxInError}"
							 Text="{Binding Description, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True, UpdateSourceTrigger=PropertyChanged}"/>
			<CheckBox Grid.Row="2" Grid.Column="2" Margin="4"
								HorizontalAlignment="Center" VerticalAlignment="Center"
								IsChecked="{Binding Path=IsEnabled, ElementName=ErrorTemplate2}"/>
			<CheckBox Grid.Row="2" Grid.Column="3" Margin="4"
								HorizontalAlignment="Center" VerticalAlignment="Center"
								IsChecked="{Binding Path=IsReadOnly, ElementName=ErrorTemplate2}"/>

			<TextBlock Grid.Row="3" Grid.Column="0" Margin="4"
								 Text="errorTemplateSilverlightStyle"/>
			<TextBox Grid.Row="3" Grid.Column="1" Margin="4"
							 x:Name="ErrorTemplate3"
							 Validation.ErrorTemplate="{StaticResource ErrorTemplateRight}"
							 Text="{Binding Description, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True, UpdateSourceTrigger=PropertyChanged}"/>
			<CheckBox Grid.Row="3" Grid.Column="2" Margin="4"
								HorizontalAlignment="Center" VerticalAlignment="Center"
								IsChecked="{Binding Path=IsEnabled, ElementName=ErrorTemplate3}"/>
			<CheckBox Grid.Row="3" Grid.Column="3" Margin="4"
								HorizontalAlignment="Center" VerticalAlignment="Center"
								IsChecked="{Binding Path=IsReadOnly, ElementName=ErrorTemplate3}"/>

			<TextBlock Grid.Row="4" Grid.Column="0" Margin="4"
								 Text="ErrorTemplateSilverlightStyle2"/>
			<TextBox Grid.Row="4" Grid.Column="1" Margin="4"
							 x:Name="ErrorTemplate4"
							 Validation.ErrorTemplate="{StaticResource ErrorTemplatePopupTop}"
							 Text="{Binding Description, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True, UpdateSourceTrigger=PropertyChanged}"/>
			<CheckBox Grid.Row="4" Grid.Column="2" Margin="4"
								HorizontalAlignment="Center" VerticalAlignment="Center"
								IsChecked="{Binding Path=IsEnabled, ElementName=ErrorTemplate4}"/>
			<CheckBox Grid.Row="4" Grid.Column="3" Margin="4"
								HorizontalAlignment="Center" VerticalAlignment="Center"
								IsChecked="{Binding Path=IsReadOnly, ElementName=ErrorTemplate4}"/>

			<TextBlock Grid.Row="5" Grid.Column="0" Margin="4"
								 Text="Read-Only TextBox"/>
			<TextBox Grid.Row="5" Grid.Column="1" Margin="4"
							 x:Name="ReadOnlyTextBox"
							 Style="{StaticResource ReadOnlyTextBox}"
							 Validation.ErrorTemplate="{StaticResource ErrorTemplatePopupTop}"
							 IsReadOnly="True"
							 Text="{Binding Description, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True, UpdateSourceTrigger=PropertyChanged}"/>
			<CheckBox Grid.Row="5" Grid.Column="2" Margin="4"
								HorizontalAlignment="Center" VerticalAlignment="Center"
								IsChecked="{Binding Path=IsEnabled, ElementName=ReadOnlyTextBox}"/>
			<CheckBox Grid.Row="5" Grid.Column="3" Margin="4"
								HorizontalAlignment="Center" VerticalAlignment="Center"
								IsChecked="{Binding Path=IsReadOnly, ElementName=ReadOnlyTextBox}"/>

			<TextBlock Grid.Row="6" Grid.Column="0" Margin="4"
								 Text="CheckBox (default style)"/>
			<CheckBox Grid.Row="6" Grid.Column="1" Margin="4"
								x:Name="CheckBoxDefault"
								IsChecked="{Binding IsDeployed, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True, UpdateSourceTrigger=PropertyChanged}"/>
			<CheckBox Grid.Row="6" Grid.Column="2" Margin="4"
								HorizontalAlignment="Center" VerticalAlignment="Center"
								IsChecked="{Binding Path=IsEnabled, ElementName=CheckBoxDefault}"/>
			<CheckBox Grid.Row="6" Grid.Column="3" Margin="4"
								HorizontalAlignment="Center" VerticalAlignment="Center"
								IsChecked="{Binding Path=IsReadOnly, ElementName=CheckBoxDefault}"/>

			<TextBlock Grid.Row="7" Grid.Column="0" Margin="4"
								 Text="CheckBox (Slider style)"/>
			<CheckBox Grid.Row="7" Grid.Column="1" Margin="4"
								x:Name="CheckBoxSlider1"
								Style="{StaticResource CheckBoxSliderStyle}"
								IsChecked="{Binding IsDeployed, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True, UpdateSourceTrigger=PropertyChanged}"/>
			<CheckBox Grid.Row="7" Grid.Column="2" Margin="4"
								HorizontalAlignment="Center" VerticalAlignment="Center"
								IsChecked="{Binding Path=IsEnabled, ElementName=CheckBoxSlider1}"/>
			<CheckBox Grid.Row="7" Grid.Column="3" Margin="4"
								HorizontalAlignment="Center" VerticalAlignment="Center"
								IsChecked="{Binding Path=IsReadOnly, ElementName=CheckBoxSlider1}"/>

			<TextBlock Grid.Row="8" Grid.Column="0" Margin="4"
								 Text="CheckBox (Orange slider)"/>
			<CheckBox Grid.Row="8" Grid.Column="1" Margin="4"
								x:Name="CheckBoxSlider2"
								HorizontalAlignment="Left"
								Style="{StaticResource OrangeSwitchStyle}"
								IsChecked="{Binding IsDeployed, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True, UpdateSourceTrigger=PropertyChanged}"/>
			<CheckBox Grid.Row="8" Grid.Column="2" Margin="4"
								HorizontalAlignment="Center" VerticalAlignment="Center"
								IsChecked="{Binding Path=IsEnabled, ElementName=CheckBoxSlider2}"/>
			<CheckBox Grid.Row="8" Grid.Column="3" Margin="4"
								HorizontalAlignment="Center" VerticalAlignment="Center"
								IsChecked="{Binding Path=IsReadOnly, ElementName=CheckBoxSlider2}"/>

		</Grid>

		<Rectangle VerticalAlignment="Stretch" 
							 HorizontalAlignment="Stretch"
							 Fill="#A1808080"
							 Grid.Row="1" />
		<Grid Name="CentrePanel" Grid.Row="1">
			<Border CornerRadius="3"
				Background="LightGray" HorizontalAlignment="Left">
				<Grid x:Name="grid" Margin="2">
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition Height="Auto" />
						<RowDefinition Height="*" />
					</Grid.RowDefinitions>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto" />
						<ColumnDefinition Width="*" />
					</Grid.ColumnDefinitions>

					<Rectangle Grid.Column="0" Grid.RowSpan="2" Fill="Beige" />
					<Rectangle Grid.Column="1" Grid.RowSpan="2" Fill="#FFDDDCF5" />

					<Button
						Grid.Row="0" Grid.Column="0"
						MinWidth="86" MinHeight="26"
						Margin="4"
						Content="Close">
						<i:Interaction.Triggers>
							<i:EventTrigger EventName="Click">
								<ic:GoToStateAction StateName="ClosedState"/>
							</i:EventTrigger>
						</i:Interaction.Triggers>
					</Button>

					<Button
						Grid.Row="1" Grid.Column="0"
						MinWidth="86" MinHeight="26"
						Margin="4"
						Content="Open">
						<i:Interaction.Triggers>
							<i:EventTrigger EventName="Click">
								<ic:GoToStateAction StateName="OpenState"/>
							</i:EventTrigger>
						</i:Interaction.Triggers>
					</Button>
				</Grid>

			</Border>
		</Grid>
		
	</Grid>
</Window>
