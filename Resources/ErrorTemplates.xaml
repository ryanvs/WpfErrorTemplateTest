<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
	xmlns:gsm="clr-namespace:Armstrong.GSM"
	xmlns:behaviors="clr-namespace:WpfErrorTemplateTest.Behaviors"
>
	<!-- Error Templates -->
	<Style x:Name="ErrorTemplate" TargetType="{x:Type FrameworkElement}">
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Margin" Value="0,2,40,2"/>
		<Setter Property="Validation.ErrorTemplate">
			<Setter.Value>
				<ControlTemplate>
					<DockPanel LastChildFill="True">
						<Border
							Background="Red" DockPanel.Dock="Right" Margin="5,0,0,0" Width="20" Height="20" CornerRadius="10"
							ToolTip="{Binding ElementName=customAdorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}">
							<TextBlock Text="!" VerticalAlignment="Center" HorizontalAlignment="Center" FontWeight="Bold" Foreground="White"/>
						</Border>
						<AdornedElementPlaceholder Name="customAdorner" VerticalAlignment="Center">
							<Border BorderBrush="Red" BorderThickness="1"/>
						</AdornedElementPlaceholder>
					</DockPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="textBoxInError" TargetType="{x:Type TextBox}">
		<Setter Property="Validation.ErrorTemplate">
			<Setter.Value>
				<ControlTemplate>
					<DockPanel LastChildFill="True">
						<TextBlock TextBlock.Foreground="#FFFF0000" TextBlock.FontSize="14" HorizontalAlignment="Left" Margin="0,5,0,1" Text="!!!" />
						<Border BorderBrush="#FFFF0000" BorderThickness="1">
							<AdornedElementPlaceholder />
						</Border>
					</DockPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="Validation.HasError" Value="True">
				<Setter Property="FrameworkElement.ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<!-- http://stackoverflow.com/a/7437765/29762 -->
	<ControlTemplate x:Key="errorTemplateSilverlightStyle">
		<StackPanel Orientation="Horizontal">
			<Border
				BorderThickness="1" BorderBrush="#FFdc000c"
				CornerRadius="0.7" SnapsToDevicePixels="True" VerticalAlignment="Top">
				<Grid>
					<Polygon
						x:Name="toolTipCorner"
						Grid.ZIndex="2"
						Margin="-1"
						Points="6,6 6,0 0,0" 
						Fill="#FFdc000c" 
						HorizontalAlignment="Right" 
						VerticalAlignment="Top"
						IsHitTestVisible="True"/>
					<Polyline
						Grid.ZIndex="3"
						Points="7,7 0,0" Margin="-1" HorizontalAlignment="Right" 
						StrokeThickness="1.5"
						StrokeEndLineCap="Round"
						StrokeStartLineCap="Round"
						Stroke="White"
						VerticalAlignment="Top"
						IsHitTestVisible="True"/>
					<AdornedElementPlaceholder x:Name="adorner"/>
				</Grid>
			</Border>
			<Border x:Name="errorBorder" Background="#FFdc000c" Margin="1,0,0,0"
								Opacity="0" CornerRadius="1.5" SnapsToDevicePixels="True"
								IsHitTestVisible="False"
								MinHeight="24" MaxWidth="267">
				<Border.Effect>
					<DropShadowEffect
						ShadowDepth="2.25" 
						Color="Black" 
						Opacity="0.4"
						Direction="315"
						BlurRadius="4"/>
				</Border.Effect>
				<TextBlock
					Text="{Binding ElementName=adorner,
					Path=AdornedElement.(Validation.Errors).CurrentItem.ErrorContent}"
					Foreground="White" Margin="8,3,8,3" TextWrapping="Wrap"/>
			</Border>
		</StackPanel>
		<ControlTemplate.Triggers>
			<DataTrigger Value="True">
				<DataTrigger.Binding>
					<MultiBinding Converter="{gsm:BooleanOrConverter}">
						<Binding ElementName="adorner" Path="AdornedElement.IsKeyboardFocused" />
						<Binding ElementName="toolTipCorner" Path="IsMouseOver"/>
					</MultiBinding>
				</DataTrigger.Binding>
				<DataTrigger.EnterActions>
					<BeginStoryboard x:Name="fadeInStoryboard">
						<Storyboard>
							<DoubleAnimation Duration="00:00:00.15"
																						 Storyboard.TargetName="errorBorder"
																						 Storyboard.TargetProperty="Opacity"
																						 To="1"/>
							<ThicknessAnimation Duration="00:00:00.15"
																								Storyboard.TargetName="errorBorder"
																								Storyboard.TargetProperty="Margin"
																								FillBehavior="HoldEnd"
																								From="1,0,0,0"
																								To="5,0,0,0">
								<ThicknessAnimation.EasingFunction>
									<BackEase EasingMode="EaseOut" Amplitude="2"/>
								</ThicknessAnimation.EasingFunction>
							</ThicknessAnimation>
						</Storyboard>
					</BeginStoryboard>
				</DataTrigger.EnterActions>
				<DataTrigger.ExitActions>
					<StopStoryboard BeginStoryboardName="fadeInStoryboard"/>
					<BeginStoryboard x:Name="fadeOutStoryBoard">
						<Storyboard>
							<DoubleAnimation Duration="00:00:00"
																						 Storyboard.TargetName="errorBorder"
																						 Storyboard.TargetProperty="Opacity"
																						 To="0"/>
						</Storyboard>
					</BeginStoryboard>
				</DataTrigger.ExitActions>
			</DataTrigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<!-- http://stackoverflow.com/a/20394432/29762 -->
	<ControlTemplate x:Key="ErrorTemplateSilverlightStyle2">
		<StackPanel Orientation="Horizontal">
			<!-- Defines TextBox outline border and the ToolTipCorner -->
			<Border x:Name="border"
							BorderThickness="1.25"
							BorderBrush="#FFDC000C">
				<Grid>
					<Polygon x:Name="toolTipCorner"
									 Grid.ZIndex="2"
									 Margin="-1"
									 Points="9,9 9,0 0,0"
									 Fill="#FFDC000C"
									 HorizontalAlignment="Right"
									 VerticalAlignment="Top"
									 IsHitTestVisible="True"/>
					<Polyline Grid.ZIndex="3"
										Points="10,10 0,0"
										Margin="-1"
										HorizontalAlignment="Right"
										StrokeThickness="1.5"
										StrokeEndLineCap="Round"
										StrokeStartLineCap="Round"
										Stroke="White"
										VerticalAlignment="Top"
										IsHitTestVisible="True"/>
					<AdornedElementPlaceholder x:Name="adorner"/>
				</Grid>
			</Border>
			<!-- Defines the Popup -->
			<Popup x:Name="placard"
						 AllowsTransparency="True"
						 PopupAnimation="Fade"
						 Placement="Top"
						 PlacementTarget="{Binding ElementName=toolTipCorner}"
						 PlacementRectangle="10,-1,0,0">
				<!-- Used to reposition Popup when dialog moves or resizes -->
				<i:Interaction.Behaviors>
					<behaviors:RepositionPopupBehavior/>
				</i:Interaction.Behaviors>
				<Popup.Style>
					<Style TargetType="{x:Type Popup}">
						<Style.Triggers>
							<!-- Shows Popup when TextBox has focus -->
							<DataTrigger Binding="{Binding ElementName=adorner, Path=AdornedElement.IsFocused}"
													 Value="True">
								<Setter Property="IsOpen" Value="True"/>
							</DataTrigger>
							<!-- Shows Popup when mouse hovers over ToolTipCorner -->
							<DataTrigger Binding="{Binding ElementName=toolTipCorner, Path=IsMouseOver}"
													 Value="True">
								<Setter Property="IsOpen" Value="True"/>
							</DataTrigger>
							<!-- Shows Popup when mouse hovers over ToolTipCorner but is over placard -->
							<DataTrigger Binding="{Binding ElementName=placard, Path=IsMouseOver}"
													 Value="True">
								<Setter Property="IsOpen" Value="True"/>
							</DataTrigger>
							<!-- Hides Popup when window is no longer active -->
							<DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=IsActive}"
													 Value="False">
								<Setter Property="IsOpen" Value="False"/>
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</Popup.Style>
				<Border x:Name="errorBorder"
								Background="#FFDC000C"
								Margin="0,0,8,8"
								Opacity="1"
								CornerRadius="4"
								IsHitTestVisible="False"
								MinHeight="24"
								MaxWidth="267">
					<!-- Causes flickering on IsMouseOver when control is not focused
					<Border.Effect>
						<DropShadowEffect x:Name="errorBorderDropShadow"
															ShadowDepth="4"
															Color="Black"
															Opacity="0.6"
															Direction="315"
															BlurRadius="4"/>
					</Border.Effect>
					-->
					<TextBlock x:Name="errorTextBlock"
										 Text="{Binding ElementName=adorner, Path=AdornedElement.(Validation.Errors).CurrentItem.ErrorContent}"
										 Foreground="White"
										 Margin="8,3,8,3"
										 TextWrapping="Wrap"/>
				</Border>
			</Popup>
		</StackPanel>
	</ControlTemplate>

</ResourceDictionary>